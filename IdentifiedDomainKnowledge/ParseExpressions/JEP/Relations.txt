TP:  [x jep] add---> [complex]
TP:  [divide] differentiate---> [rule divide differentiate rule]
TP:  [range] HasProperty---> [range]
TP:  [type check number] IsA--> [number]
TP:  [v element] calculate---> [dim]
TP:  [gen range] IsA--> [range]
TP:  [jep set] IsA--> [set]
TP:  [dimensions] equals---> [object]
TP:  [x variable] HasProperty---> [equation]
TP:  [parser] HasProperty---> [function]
TP:  [exterior product] IsA--> [product]
TP:  [transpose] calculate---> [value]
TP:  [tensor] HasProperty---> [number elements]
TP:  [size] calculate---> [dim]
TP:  [matrix] HasProperty---> [number rows]
FP:  [matrix rp example] do---> [stuff]
TP:  [element] multiply---> [calculate value]
TP:  [power] differentiate---> [rule get power differentiate rule]
TP:  [addition] differentiate---> [rule get addition differentiate rule]
FP:  [rank] calculate---> [value]
TP:  [expression] HasProperty---> [expression]
FP:  [rp speed] do---> [jep]
TP:  [trace] calculate---> [dim]
TP:  [v store] HasProperty---> [sub]
TP:  [subjects] HasProperty---> [mod]
FP:  [parser token manager] HasProperty---> [re initial rounds]
TP:  [jep] add---> [function]
TP:  [matrix] HasProperty---> [number cols]
FP:  [chain rule] IsA--> [rule]
FP:  [rp speed] do---> [all]
FP:  [mnn store] HasProperty---> [sub]
FP:  [partial derivative] HasProperty---> [dnames]
TP:  [cur number] IsA--> [number]
FP:  [vector mat] IsA--> [mat]
FP:  [scaler store] allocates---> [object]
FP:  [mnn store] add---> [object]
FP:  [rank] HasProperty---> [rank]
TP:  [integers] add---> [object]
FP:  [free group] HasProperty---> [root value]
FP:  [vn store] expand---> [variable array]
FP:  [rp speed] HasProperty---> [main]
FP:  [jj] add---> [states]
TP:  [matrix value] IsA--> [value]
TP:  [polynomial creator] HasProperty---> [negative]
TP:  [mat store copy variable] IsA--> [variable]
TP:  [inverse] calculate---> [dim]
TP:  [inverse] calculate---> [value]
FP:  [matrix preprocessor] IsA--> [preprocessor]
TP:  [astm variable node] HasProperty---> [dim]
TP:  [monomial] HasProperty---> [negative power]
TP:  [power] HasProperty---> [power]
TP:  [integers] HasProperty---> [integers]
TP:  [matrix] HasProperty---> [hash code]
TP:  [sum] evaluate---> [object]
TP:  [rationals] add---> [object]
FP:  [open node scope] IsA--> [scope]
TP:  [tree utils] verify---> [positive]
TP:  [tree utils] HasProperty---> [operator]
TP:  [range] HasProperty---> [gen range]
TP:  [matrix] HasProperty---> [element]
TP:  [group element] IsA--> [element]
TP:  [dimensions] HasProperty---> [last dim]
FP:  [java char stream] HasProperty---> [backup]
TP:  [operator] HasProperty---> [pfmc]
TP:  [matrix rp speed] do---> [vector]
FP:  [free group] HasProperty---> [inverse]
TP:  [operator] HasProperty---> [get u minus]
TP:  [integers] HasProperty---> [zero]
TP:  [quaternions] HasProperty---> [inverse]
TP:  [complex] HasProperty---> [argument]
TP:  [power] differentiate---> [rule differentiate object]
FP:  [vector print] do---> [stuff]
TP:  [rule divide] IsA--> [divide]
FP:  [group] multiply---> [multiply object]
TP:  [comparative] HasProperty---> [ne]
TP:  [expression] run---> [object]
FP:  [group] add---> [get group add]
TP:  [permutation group] HasProperty---> [sub]
FP:  [group] subtract---> [get sub]
FP:  [mnn store] make---> [list]
FP:  [transpose] calculate---> [value]
TP:  [vn store] HasProperty---> [sub]
TP:  [monomial] expand---> [object]
TP:  [matrix sum] IsA--> [sum]
FP:  [java char stream] HasProperty---> [line]
FP:  [subjects] add---> [standard functions]
TP:  [map check number] IsA--> [number]
TP:  [element set] IsA--> [set]
TP:  [tensor] HasProperty---> [instance]
FP:  [java char stream] HasProperty---> [image]
FP:  [x jep] add---> [standard functions]
TP:  [operator] HasProperty---> [get ne]
FP:  [scaler store] HasProperty---> [pow node]
TP:  [v element] calculate---> [value]
TP:  [matrix operator] IsA--> [operator]
FP:  [scaler object] IsA--> [object]
TP:  [command element] HasProperty---> [value]
FP:  [matrix store] IsA--> [store]
FP:  [macro function] HasProperty---> [name]
TP:  [scaler store] HasProperty---> [mod]
TP:  [x operator verify self inverse] IsA--> [inverse]
TP:  [complex float value] IsA--> [value]
TP:  [monomial] HasProperty---> [value of]
FP:  [array mat] IsA--> [mat]
TP:  [reals] HasProperty---> [sub]
TP:  [tree utils] verify---> [operator]
TP:  [rationals] HasProperty---> [zero]
TP:  [p variable] IsA--> [variable]
FP:  [group jep] add---> [standard functions]
TP:  [exterior product] calculate---> [value]
TP:  [matrix partial derivative] HasProperty---> [dimensions]
TP:  [free group] HasProperty---> [zero]
FP:  [object store] add---> [variable]
TP:  [matrix] subtract---> [calculate dim]
TP:  [p function] IsA--> [function]
TP:  [p constant] verify---> [zero]
TP:  [determinant] HasProperty---> [determinant]
FP:  [free group] HasProperty---> [value of]
TP:  [zn] HasProperty---> [sub]
TP:  [power] differentiate---> [rule get name]
TP:  [diagonal] calculate---> [dim]
TP:  [operator] HasProperty---> [get power]
TP:  [operator set] IsA--> [set]
TP:  [subjects] HasProperty---> [inverse]
FP:  [free group] HasProperty---> [symbol]
FP:  [jep] add---> [standard functions]
FP:  [rp command] HasProperty---> [ref]
TP:  [arc sine] HasProperty---> [asin]
FP:  [free group] multiply---> [object]
TP:  [subjects] HasProperty---> [elements]
TP:  [p constant] verify---> [infinity]
TP:  [max] HasProperty---> [max]
TP:  [d variable] find---> [derivative]
TP:  [element divide] calculate---> [dim]
FP:  [vector jep] evaluate---> [raw]
FP:  [matrix speed] IsA--> [speed]
TP:  [subjects] calculate---> [value]
TP:  [partial derivative set matrix value] IsA--> [value]
FP:  [group jep] HasProperty---> [group]
TP:  [diagonal] HasProperty---> [diagonal]
FP:  [polynomial creator raise] IsA--> [raise]
TP:  [complex] HasProperty---> [re]
TP:  [divide] differentiate---> [rule differentiate object]
TP:  [subjects] HasProperty---> [zero]
FP:  [multiply vn mnn] IsA--> [mnn]
FP:  [scaler store] expand---> [variable array]
FP:  [group] verify---> [constant poly]
TP:  [rp command] HasProperty---> [function]
TP:  [element comparative] calculate---> [value]
TP:  [matrix sum] calculate---> [dim]
TP:  [astm constant] HasProperty---> [dim]
TP:  [group power] HasProperty---> [pow]
TP:  [complex set] IsA--> [set]
TP:  [integers] HasProperty---> [sub]
FP:  [mnn object] HasProperty---> [dims]
TP:  [rationals] equals---> [object]
TP:  [polynomial] verify---> [negative]
TP:  [dimensions] HasProperty---> [first dim]
TP:  [object store] HasProperty---> [sub]
TP:  [trace] calculate---> [value]
TP:  [complex] HasProperty---> [complex]
FP:  [free group] HasProperty---> [zero]
TP:  [matrix] multiply---> [run object]
TP:  [l value] IsA--> [value]
TP:  [polynomial] multiply---> [object]
FP:  [group] subtract---> [get group subtract]
FP:  [dimensions] HasProperty---> [rank]
TP:  [matrix] assign---> [run object]
FP:  [gen mat] evaluate---> [object]
TP:  [v map] calculate---> [value]
TP:  [operator] HasProperty---> [get le]
TP:  [min] HasProperty---> [min]
TP:  [zn] HasProperty---> [mod]
FP:  [jjt] HasProperty---> [child]
FP:  [vector store] IsA--> [store]
TP:  [mnn store] HasProperty---> [sub]
TP:  [tree utils] verify---> [integer]
FP:  [matrix rp speed] IsA--> [speed]
TP:  [complex] HasProperty---> [log]
TP:  [d variable] IsA--> [variable]
TP:  [mutiable monomial] HasProperty---> [power]
TP:  [jep] add---> [complex]
FP:  [scaler store] HasProperty---> [mod]
FP:  [group] add---> [standard constants]
TP:  [polynomial] equals---> [object]
FP:  [parser token manager] HasProperty---> [re initial]
TP:  [dimensions] verify---> [d]
TP:  [matrix] HasProperty---> [dim]
FP:  [scaler store] multiply---> [stack]
TP:  [v map] HasProperty---> [variables]
FP:  [object store] HasProperty---> [increment heap]
TP:  [statments process equation] IsA--> [equation]
FP:  [mat store] IsA--> [store]
TP:  [complex] HasProperty---> [sub]
TP:  [trapezium] evaluate---> [object]
TP:  [product] HasProperty---> [product]
TP:  [power expression] IsA--> [expression]
TP:  [element comparative] calculate---> [dim]
TP:  [comparative] HasProperty---> [comparative]
FP:  [group] add---> [run object]
FP:  [command evaluator] IsA--> [evaluator]
TP:  [rationals] HasProperty---> [sub]
TP:  [d variable set derivative] IsA--> [derivative]
TP:  [matrix] multiply---> [get matrix multiply]
FP:  [scaler store] HasProperty---> [ge]
TP:  [dimensions] HasProperty---> [number elements]
TP:  [subjects] HasProperty---> [element]
FP:  [mnn store] expand---> [variable array]
FP:  [polynomial creator visit] IsA--> [visit]
TP:  [addition] differentiate---> [rule differentiate object]
FP:  [vn store] HasProperty---> [eq]
TP:  [element divide] IsA--> [divide]
TP:  [comparative set tolerance] IsA--> [tolerance]
TP:  [comparative] HasProperty---> [eq]
FP:  [matrix rp speed] do---> [rpe]
FP:  [mat object] IsA--> [object]
TP:  [dimensions] HasProperty---> [dimensions]
TP:  [object store] add---> [variable]
TP:  [operator] HasProperty---> [get operators]
FP:  [object store] assign---> [object]
TP:  [zn] HasProperty---> [pow]
FP:  [matrix jep] add---> [standard functions]
FP:  [vector jep] add---> [standard functions]
TP:  [v map] calculate---> [dim]
FP:  [object store] make---> [list]
TP:  [monomial] add---> [object]
TP:  [tensor] HasProperty---> [hash code]
TP:  [integers] HasProperty---> [inverse]
FP:  [jama util] add---> [standard functions]
TP:  [length] calculate---> [value]
TP:  [matrix] add---> [calculate dim]
TP:  [push vector] IsA--> [vector]
TP:  [v sum] calculate---> [value]
TP:  [matrix divide] IsA--> [divide]
TP:  [quaternions] HasProperty---> [sub]
TP:  [rank] calculate---> [value]
TP:  [absolute] HasProperty---> [absolute]
FP:  [jjt] add---> [child]
TP:  [jep] add---> [variable]
TP:  [sine] HasProperty---> [sin]
TP:  [matrix] HasProperty---> [number elements]
FP:  [matrix rp speed] do---> [mat]
TP:  [tree utils] HasProperty---> [number]
TP:  [operator] HasProperty---> [get gt]
TP:  [matrix dot] calculate---> [dim]
TP:  [v sum] calculate---> [dim]
TP:  [vector equation] IsA--> [equation]
TP:  [product] evaluate---> [object]
TP:  [jep] remove---> [function]
FP:  [object store] expand---> [variable array]
TP:  [divide] differentiate---> [rule get name]
TP:  [matrix] assign---> [get matrix assign]
FP:  [push mat] IsA--> [mat]
FP:  [object store] HasProperty---> [variable]
FP:  [matrix jep] evaluate---> [raw]
FP:  [group] add---> [add object]
FP:  [free group] HasProperty---> [t poly]
TP:  [matrix vector set element] IsA--> [element]
TP:  [floor] HasProperty---> [floor]
TP:  [number parameter] IsA--> [parameter]
TP:  [tree utils] verify---> [zero]
TP:  [polynomial] add---> [object]
FP:  [free group] HasProperty---> [sub]
TP:  [x jep console] reset---> [variables]
TP:  [array vector] IsA--> [vector]
TP:  [mnn store copy variable] IsA--> [variable]
TP:  [group power] IsA--> [power]
TP:  [determinant] calculate---> [value]
FP:  [scaler store] HasProperty---> [or]
TP:  [operator] HasProperty---> [get ge]
FP:  [permutation group] IsA--> [group]
TP:  [x operator set] IsA--> [set]
TP:  [jep] HasProperty---> [traverse]
TP:  [integers] equals---> [object]
TP:  [rationals] HasProperty---> [one]
TP:  [subjects] has---> [equation]
TP:  [free group element free group element] IsA--> [element]
FP:  [jjt parser state] IsA--> [state]
TP:  [variable set derivative] IsA--> [derivative]
TP:  [monomial] add---> [constant]
FP:  [parser] replace---> [escape]
TP:  [element] multiply---> [multiply object]
TP:  [v power] calculate---> [value]
TP:  [matrix vector] HasProperty---> [dim]
TP:  [polynomial creator] HasProperty---> [sub]
TP:  [complex] multiply---> [object]
TP:  [tree utils] verify---> [function]
TP:  [matrix variable] create---> [derivative]
TP:  [subjects] HasProperty---> [pow]
FP:  [vn store] multiply---> [stack]
TP:  [matrix dot] calculate---> [value]
TP:  [sum] HasProperty---> [sum]
TP:  [tree utils] verify---> [constant]
TP:  [astm constant] HasProperty---> [value]
FP:  [scaler store] make---> [list]
TP:  [algebraic extension element] IsA--> [element]
TP:  [matrix if] calculate---> [value]
TP:  [complex] HasProperty---> [hash code]
TP:  [integers] HasProperty---> [pow]
TP:  [trapezium] HasProperty---> [trapezium]
TP:  [operator set set] IsA--> [set]
TP:  [matrix divide] calculate---> [value]
FP:  [scaler store] HasProperty---> [eq]
TP:  [free group element] IsA--> [element]
TP:  [x operator] verify---> [composite]
TP:  [rationals] HasProperty---> [inverse]
TP:  [operator] HasProperty---> [get add]
TP:  [zn] HasProperty---> [zero]
TP:  [element] HasProperty---> [object]
TP:  [p constant] verify---> [integer]
TP:  [operator] HasProperty---> [get dot]
FP:  [jep set] allow---> [assignment]
FP:  [vn store] IsA--> [store]
TP:  [dimensions] HasProperty---> [value of]
FP:  [operator] HasProperty---> [name]
TP:  [matrix speed] do---> [vector]
TP:  [tensor] HasProperty---> [dim]
FP:  [jjt] accept---> []
FP:  [object store] HasProperty---> [sub]
TP:  [subjects] create---> [number]
TP:  [modulus] HasProperty---> [modulus]
TP:  [algebraic extension] HasProperty---> [poly]
FP:  [parser state] IsA--> [state]
TP:  [comparative] HasProperty---> [tolerance]
TP:  [permutation group] HasProperty---> [inverse]
FP:  [scaler store] assign---> [object]
TP:  [tangent] HasProperty---> [tangent]
FP:  [scaler object] HasProperty---> [scaler object]
TP:  [operator] HasProperty---> [operator]
TP:  [matrix] multiply---> [calculate value]
TP:  [partial derivative] find---> [derivative]
FP:  [postfix math command check] IsA--> [check]
TP:  [p constant] HasProperty---> [pow]
FP:  [object store] IsA--> [store]
FP:  [vn store] make---> [list]
TP:  [operator] HasProperty---> [get mod]
FP:  [clear node scope] IsA--> [scope]
TP:  [group mod] HasProperty---> [mod]
FP:  [jjt close] IsA--> [close]
TP:  [tensor] HasProperty---> [tensor]
TP:  [p constant] verify---> [positive]
TP:  [matrix] add---> [calculate value]
TP:  [tree utils] verify---> [complex]
TP:  [command check number] IsA--> [number]
TP:  [complex] HasProperty---> [sin]
FP:  [scaler store] HasProperty---> [pow]
FP:  [group] add---> [standard functions]
FP:  [rp speed] IsA--> [speed]
TP:  [variable set matrix value] IsA--> [value]
TP:  [complex] HasProperty---> [im]
FP:  [rp speed] do---> [rpe]
TP:  [vn store copy variable] IsA--> [variable]
FP:  [free group] HasProperty---> [one]
TP:  [element] calculate---> [dim]
TP:  [p constant] IsA--> [constant]
TP:  [logarithm] HasProperty---> [log]
FP:  [parser] HasProperty---> [re initial]
FP:  [partial derivative] HasProperty---> [name]
TP:  [rank] calculate---> [dim]
FP:  [differentiate rule pass] IsA--> [pass]
TP:  [matrix] HasProperty---> [instance]
TP:  [tree utils] verify---> [variable]
TP:  [complex] equals---> [object]
TP:  [inverse] HasProperty---> [inverse]
TP:  [group mod] IsA--> [mod]
FP:  [jjt] HasProperty---> [number children]
FP:  [object store] HasProperty---> [increment stack]
TP:  [matrix] subtract---> [get sub]
FP:  [initial token manager state] IsA--> [state]
TP:  [subjects] HasProperty---> [equation]
TP:  [integers] compare---> [object]
TP:  [comparative] HasProperty---> [ge]
TP:  [integers] HasProperty---> [value of]
FP:  [scaler store] HasProperty---> [sub]
FP:  [matrix evaluator] IsA--> [evaluator]
FP:  [rank] calculate---> [dim]
TP:  [monomial] equals---> [object]
TP:  [tree utils] HasProperty---> [minusone]
TP:  [command element] IsA--> [element]
FP:  [jj check node] add---> [states]
FP:  [scaler store] add---> [object]
TP:  [jep] add---> [constant]
FP:  [matrix speed] do---> [mat]
TP:  [big reals] HasProperty---> [sub]
TP:  [free group] HasProperty---> [inverse]
TP:  [macro function] IsA--> [function]
TP:  [size] calculate---> [value]
TP:  [matrix store] HasProperty---> [sub]
TP:  [tree utils] verify---> [negative]
FP:  [scaler object] HasProperty---> [dims]
TP:  [matrix divide] calculate---> [dim]
TP:  [operator] HasProperty---> [get and]
FP:  [jjt parser state open node scope] IsA--> [scope]
TP:  [v operator set] IsA--> [set]
TP:  [v store copy variable] IsA--> [variable]
TP:  [monomial] HasProperty---> [pow]
TP:  [console process equation] IsA--> [equation]
TP:  [div] stack---> []
FP:  [group logical] HasProperty---> [group logical]
TP:  [subjects] HasProperty---> [dim]
FP:  [jjt parser state close] IsA--> [close]
FP:  [group] multiply---> [run object]
TP:  [integer value] IsA--> [value]
FP:  [multiply mnn mnn] IsA--> [mnn]
TP:  [scaler store] HasProperty---> [pow]
FP:  [vector example] do---> [stuff]
TP:  [complex] HasProperty---> [asin]
TP:  [monomial] compare---> [to]
TP:  [mat check number] IsA--> [number]
TP:  [determinant] calculate---> [dim]
FP:  [mnn store] IsA--> [store]
FP:  [vn store] allocates---> [object]
FP:  [tree utils] HasProperty---> [negative infinity]
FP:  [object store] multiply---> [stack]
FP:  [vn store] HasProperty---> [sub]
FP:  [object store] add---> [object]
TP:  [multiply matrix matrix] IsA--> [matrix]
TP:  [operator] HasProperty---> [get operator set]
TP:  [mu minus] calculate---> [value]
FP:  [object store] update---> [object]
TP:  [operator] HasProperty---> [get divide]
FP:  [jjt] HasProperty---> [parent]
TP:  [element] calculate---> [value]
TP:  [matrix] HasProperty---> [elements]
TP:  [d variable] create---> [derivative]
TP:  [element divide] calculate---> [value]
TP:  [polynomial] compare---> [to]
FP:  [mnn store] multiply---> [stack]
TP:  [matrix] equals---> [object]
TP:  [parser] HasProperty---> [variable]
TP:  [quaternions] HasProperty---> [zero]
TP:  [tangent] HasProperty---> [tan]
TP:  [cosine] HasProperty---> [cos]
TP:  [arc cosine] IsA--> [cosine]
FP:  [object store] reset---> [object]
TP:  [arc tangent] IsA--> [tangent]
TP:  [astm fun node] HasProperty---> [dim]
FP:  [vn store] add---> [object]
TP:  [complex] HasProperty---> [absolute]
TP:  [subjects] HasProperty---> [sub]
TP:  [operator set] HasProperty---> [element]
TP:  [matrix dot] IsA--> [dot]
TP:  [monomial] equals---> [ignore constant]
TP:  [matrix vector] HasProperty---> [element]
TP:  [object store] HasProperty---> [variable]
TP:  [logarithm] HasProperty---> [logarithm]
FP:  [mnn store] assign---> [object]
TP:  [big reals] HasProperty---> [zero]
TP:  [matrix vector] IsA--> [vector]
FP:  [vn object] HasProperty---> [dims]
TP:  [element] HasProperty---> [element]
TP:  [integers] HasProperty---> [mod]
TP:  [big reals] HasProperty---> [inverse]
TP:  [exterior product] calculate---> [dim]
TP:  [diagonal] calculate---> [value]
TP:  [matrix] multiply---> [calculate dim]
TP:  [operator] HasProperty---> [get assign]
TP:  [addition] differentiate---> [rule get name]
FP:  [group] subtract---> [run object]
FP:  [mnn store] HasProperty---> [eq]
TP:  [operator] HasProperty---> [get not]
TP:  [reals] HasProperty---> [inverse]
TP:  [monomial] HasProperty---> [sub]
TP:  [matrix] add---> [add object]
TP:  [mu minus] calculate---> [dim]
TP:  [vector jep set element] IsA--> [element]
TP:  [rationals] multiply---> [object]
TP:  [subjects] verify---> [zero]
TP:  [cust function] IsA--> [function]
TP:  [rationals] compare---> [object]
FP:  [mnn store] allocates---> [object]
TP:  [rationals] HasProperty---> [value of]
TP:  [square root square root] IsA--> [root]
TP:  [operator] HasProperty---> [get multiply]
TP:  [rationals] HasProperty---> [multiply inverse]
TP:  [matrix] differentiate---> [get matrix differentiate]
TP:  [tree utils] HasProperty---> [zero]
FP:  [half] HasProperty---> [half]
TP:  [matrix operator set] IsA--> [set]
TP:  [x variable] calculate---> [value]
TP:  [complex] add---> [object]
TP:  [complex] HasProperty---> [tan]
FP:  [object store] HasProperty---> [dec stack]
TP:  [complex] HasProperty---> [object]
TP:  [polynomial] expand---> [object]
FP:  [gen mat] HasProperty---> [gen mat]
FP:  [transpose] calculate---> [dim]
TP:  [matrix] multiply---> [multiply object]
TP:  [operator] HasProperty---> [get eq]
TP:  [parser] HasProperty---> [expression]
TP:  [max] evaluate---> [object]
TP:  [rp command] HasProperty---> [variable]
TP:  [dimensions] HasProperty---> [ith dim]
FP:  [subjects] HasProperty---> [name]
FP:  [jjt parser state reset] IsA--> [reset]
FP:  [mat store] HasProperty---> [variable value]
TP:  [complex] HasProperty---> [power]
TP:  [monomial] HasProperty---> [negative coefficient]
TP:  [verify self inverse] IsA--> [inverse]
TP:  [jep] HasProperty---> [value]
TP:  [reals] HasProperty---> [zero]
FP:  [free group] add---> [object]
TP:  [cosine heap cosh] IsA--> [cosh]
TP:  [complex] verify---> [na node]
TP:  [operator] HasProperty---> [get or]
TP:  [simpson] evaluate---> [object]
TP:  [arc sine] IsA--> [sine]
TP:  [integers] HasProperty---> [one]
TP:  [p constant] HasProperty---> [sub]
TP:  [comparative] HasProperty---> [le]
TP:  [operator] HasProperty---> [name]
TP:  [root value] IsA--> [value]
TP:  [element] multiply---> [calculate dim]
TP:  [min] evaluate---> [object]
TP:  [d variable] HasProperty---> [derivative]
TP:  [transpose] calculate---> [dim]
FP:  [vn store] assign---> [object]
FP:  [tree utils] HasProperty---> [positive infinity]
TP:  [check number] IsA--> [number]
TP:  [complex] HasProperty---> [integer value]
TP:  [process equation] IsA--> [equation]
TP:  [operator] HasProperty---> [get list]
FP:  [scaler store] HasProperty---> [variable value]
TP:  [simpson] HasProperty---> [simpson]
TP:  [partial derivative] HasProperty---> [root]
FP:  [scaler store] HasProperty---> [le]
TP:  [complex] verify---> [infinite]
FP:  [vn object] IsA--> [object]
TP:  [tensor] HasProperty---> [element]
TP:  [group divide] IsA--> [divide]
TP:  [parser] assign---> [expression]
TP:  [scaler store] HasProperty---> [sub]
TP:  [length] calculate---> [dim]
TP:  [group operator] IsA--> [operator]
TP:  [subjects] HasProperty---> [dimensions]
TP:  [integers] multiply---> [object]
TP:  [mutiable polynomial] expand---> [multiply]
TP:  [complex] HasProperty---> [negative]
TP:  [tree utils] verify---> [infinity]
FP:  [jjt parser state clear node scope] IsA--> [scope]
TP:  [free group] HasProperty---> [symbol]
FP:  [free group] add---> [standard constants]
TP:  [matrix power] IsA--> [power]
FP:  [tree utils] HasProperty---> [name]
TP:  [matrix list] calculate---> [value]
TP:  [free group] HasProperty---> [sub]
TP:  [matrix variable] HasProperty---> [value]
FP:  [jj ntk] IsA--> [ntk]
TP:  [vector store copy variable] IsA--> [variable]
TP:  [permutation group] HasProperty---> [zero]
TP:  [divide divide] IsA--> [divide]
TP:  [matrix vector] HasProperty---> [elements]
TP:  [half] HasProperty---> [half]
FP:  [java char stream] HasProperty---> [re initial]
FP:  [free group] verify---> [constant poly]
TP:  [complex] HasProperty---> [cos]
TP:  [zn] HasProperty---> [inverse]
FP:  [mnn object] IsA--> [object]
TP:  [monomial] multiply---> [object]
TP:  [rationals] HasProperty---> [rationals]
TP:  [x operator] verify---> [commutative]
TP:  [operator] HasProperty---> [get subtract]
TP:  [matrix if] calculate---> [dim]
TP:  [matrix] assign---> [evaluate object]
FP:  [rp example] do---> [stuff]
TP:  [matrix sum] calculate---> [value]
TP:  [v power] calculate---> [dim]
FP:  [end line] IsA--> [line]
TP:  [tree utils] HasProperty---> [value]
TP:  [list expression] IsA--> [expression]
TP:  [p constant] verify---> [negative]
TP:  [reals] HasProperty---> [pow]
FP:  [matrix rp surf example] calculate---> [mrpe]
FP:  [gen mat] IsA--> [mat]
TP:  [tensor] equals---> [object]
TP:  [matrix store copy variable] IsA--> [variable]
TP:  [subjects] verify---> [constant]
TP:  [polynomial] HasProperty---> [polynomial]
TP:  [matrix] HasProperty---> [matrix]
FP:  [matrix example] do---> [stuff]
TP:  [matrix] subtract---> [calculate value]
TP:  [group operator set] IsA--> [set]
FP:  [object store] HasProperty---> [variable value]
TP:  [cosine] HasProperty---> [cosine]
TP:  [operator] HasProperty---> [symbol]
TP:  [x variable] has---> [equation]
TP:  [tensor] HasProperty---> [buffer append]
FP:  [free group] equals---> [object]
FP:  [group] multiply---> [get group multiply]
TP:  [polynomial] HasProperty---> [sub]
TP:  [polynomial creator] create---> [poly]
FP:  [object store] allocates---> [object]
TP:  [dimensions] HasProperty---> [rank]
FP:  [vector evaluator] IsA--> [evaluator]
TP:  [sine] HasProperty---> [sine]
TP:  [subjects] calculate---> [dim]
TP:  [jep] HasProperty---> [variable]
TP:  [length] HasProperty---> [length]
TP:  [rationals] HasProperty---> [pow]
TP:  [matrix variable] HasProperty---> [dimensions]
TP:  [p operator] IsA--> [operator]
FP:  [scaler store] IsA--> [store]
TP:  [jep] remove---> [variable]
